version: '3.8'

services:

  jobmanager:
    build: ./PyFlink
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: 
      - jobmanager 
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    networks:
      - flink-network
    restart: on-failure    

  taskmanager:
    build: ./PyFlink
    hostname: taskmanager
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 16
    volumes:
      - ./out_data/:/opt/flink/data
    networks:
      - flink-network
    read_only: false
    restart: on-failure


  kafka-flink:
    image: docker.io/bitnami/kafka:3.6
    restart: always
    container_name: kafka-flink
    hostname: kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - flink-network

  kafka-ui-flink:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-flink
    depends_on:
      - kafka-flink
    ports:
      - 8089:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-flink:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - flink-network
    restart: on-failure

  producer:
    container_name: producer
    build: ./producer
    volumes:
      - .:/code
    depends_on:
      - kafka-flink
    networks:
      - flink-network
    restart: on-failure


  flink-submiter:
    build: ./PyFlink
    container_name: flink-submiter
    environment:
      - |
        FLINK_JOBMANAGER=jobmanager:8081
    command: >
      bash -c "sleep 10 && flink run -m jobmanager:8081 -py /app/flink-submit.py"
    volumes:
      - ./flink-submit.py:/app/flink-submit.py
    networks:
      - flink-network
    restart: on-failure  

networks:
  flink-network:
    driver: bridge